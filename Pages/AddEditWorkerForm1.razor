@page "/workers/add-edit-1"
@page "/worker/add-edit-1"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JSRuntime

<PageTitle>Add/Edit Worker</PageTitle>

<div class="hchb-page-container">
    <div class="hchb-page-header">
        <h1 class="hchb-page-title">Add/Edit Worker</h1>
    </div>

    <!-- Modern HCHB Tabs Implementation -->
    <div class="c-tabs" id="workerTabs">
        <div class="k-tabstrip">
            <ul class="k-tabstrip-items">
                <li class="k-item @(activeTab == "demographics" ? "k-active" : "")" @onclick="@(() => SetActiveTab("demographics"))">
                    <span class="k-link">Demographics</span>
                </li>
                <li class="k-item @(activeTab == "organization" ? "k-active" : "")" @onclick="@(() => SetActiveTab("organization"))">
                    <span class="k-link">Organization Assignments</span>
                </li>
                <li class="k-item @(activeTab == "qualifications" ? "k-active" : "")" @onclick="@(() => SetActiveTab("qualifications"))">
                    <span class="k-link">Qualifications</span>
                </li>
                <li class="k-item @(activeTab == "availability" ? "k-active" : "")" @onclick="@(() => SetActiveTab("availability"))">
                    <span class="k-link">Availability</span>
                </li>
                <li class="k-item @(activeTab == "clients" ? "k-active" : "")" @onclick="@(() => SetActiveTab("clients"))">
                    <span class="k-link">Clients</span>
                </li>
            </ul>

            <EditForm Model="@workerModel" OnValidSubmit="@HandleValidSubmit" FormName="workerForm">
                <DataAnnotationsValidator />
                
                <div class="k-content @(activeTab == "demographics" ? "k-active" : "")" id="demographics">
                    <!-- Personal Information Section -->
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Personal Information</h3>
                        
                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Status Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Status:</label>
                                <InputSelect @bind-Value="workerModel.Status" class="k-dropdown">
                                    <option value="">Select Status</option>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                    <option value="Pending">Pending</option>
                                </InputSelect>
                            </div>
                            <!-- Worker ID Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Worker ID:</label>
                                <InputText @bind-Value="workerModel.WorkerId" class="k-textbox" readonly placeholder="Auto-generated on save" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Last Name Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label k-required">Last Name</label>
                                <InputText @bind-Value="workerModel.LastName" class="k-textbox" maxlength="50" />
                                <ValidationMessage For="@(() => workerModel.LastName)" class="k-form-hint" />
                            </div>
                            <!-- First Name Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label k-required">First Name</label>
                                <InputText @bind-Value="workerModel.FirstName" class="k-textbox" maxlength="50" />
                                <ValidationMessage For="@(() => workerModel.FirstName)" class="k-form-hint" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-3">
                            <!-- Middle Initial Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Middle Initial:</label>
                                <InputText @bind-Value="workerModel.MiddleInitial" class="k-textbox" maxlength="1" />
                            </div>
                            <!-- Nick Name Field -->
                            <div class="k-form-field-wrap" style="grid-column: span 2;">
                                <label class="k-label k-form-label">Nick Name:</label>
                                <InputText @bind-Value="workerModel.NickName" class="k-textbox" maxlength="30" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Birth Date Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Birth Date:</label>
                                <InputDate @bind-Value="workerModel.BirthDate" class="k-datepicker" />
                            </div>
                            <!-- Gender Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Gender:</label>
                                <InputSelect @bind-Value="workerModel.Gender" class="k-dropdown">
                                    <option value="">Select Gender</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Other">Other</option>
                                </InputSelect>
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Race Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Race:</label>
                                <InputSelect @bind-Value="workerModel.Race" class="k-dropdown">
                                    <option value="">Select Race</option>
                                    <option value="White">White</option>
                                    <option value="Black or African American">Black or African American</option>
                                    <option value="American Indian or Alaska Native">American Indian or Alaska Native</option>
                                    <option value="Asian">Asian</option>
                                    <option value="Native Hawaiian or Other Pacific Islander">Native Hawaiian or Other Pacific Islander</option>
                                    <option value="Hispanic or Latino">Hispanic or Latino</option>
                                    <option value="Other">Other</option>
                                </InputSelect>
                            </div>
                            <!-- Marital Status Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Marital Status:</label>
                                <InputSelect @bind-Value="workerModel.MaritalStatus" class="k-dropdown">
                                    <option value="">Select Status</option>
                                    <option value="Single">Single</option>
                                    <option value="Married">Married</option>
                                    <option value="Divorced">Divorced</option>
                                    <option value="Widowed">Widowed</option>
                                    <option value="Separated">Separated</option>
                                </InputSelect>
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- NPI Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">NPI:</label>
                                <InputText @bind-Value="workerModel.NPI" class="k-textbox" maxlength="10" />
                                <div class="k-form-hint">National Provider Identifier (10 digits)</div>
                            </div>
                        </div>
                    </div>

                    <!-- Contact Information Section -->
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Contact Information</h3>

                        <div class="hchb-form-row">
                            <!-- Street Address Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Street Address:</label>
                                <InputText @bind-Value="workerModel.Street" class="k-textbox" maxlength="100" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-3">
                            <!-- City Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">City:</label>
                                <InputText @bind-Value="workerModel.City" class="k-textbox" maxlength="50" />
                            </div>
                            <!-- State Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">State:</label>
                                <InputSelect @bind-Value="workerModel.State" class="k-dropdown">
                                    <option value="">Select State</option>
                                    @foreach (var state in States)
                                    {
                                        <option value="@state.Value">@state.Text</option>
                                    }
                                </InputSelect>
                            </div>
                            <!-- Zip Code Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Zip Code:</label>
                                <InputText @bind-Value="workerModel.ZipCode" class="k-textbox" maxlength="10" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Home Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Home Phone:</label>
                                <InputText @bind-Value="workerModel.HomePhone" class="k-textbox" maxlength="15" />
                            </div>
                            <!-- Work Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Work Phone:</label>
                                <InputText @bind-Value="workerModel.WorkPhone" class="k-textbox" maxlength="15" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Cell Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Cell Phone:</label>
                                <InputText @bind-Value="workerModel.CellPhone" class="k-textbox" maxlength="15" />
                            </div>
                            <!-- Pager Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Pager:</label>
                                <InputText @bind-Value="workerModel.Pager" class="k-textbox" maxlength="15" />
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- Email Address Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Email Address:</label>
                                <InputText @bind-Value="workerModel.EmailAddress" class="k-textbox" maxlength="100" type="email" />
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- Public User Name Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Public User Name:</label>
                                <InputText @bind-Value="workerModel.PublicUserName" class="k-textbox" maxlength="50" />
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- Federated User Principal Name Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Federated User Principal Name:</label>
                                <InputText @bind-Value="workerModel.FederatedUserPrincipalName" class="k-textbox" maxlength="100" />
                                <div class="k-form-hint">Used for Active Directory integration</div>
                            </div>
                        </div>
                    </div>

                    <!-- Organization Information Section -->
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Organization Information</h3>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Home Branch Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Home Branch:</label>
                                <InputSelect @bind-Value="workerModel.HomeBranch" class="k-dropdown">
                                    <option value="">Select Branch</option>
                                    @foreach (var branch in Branches)
                                    {
                                        <option value="@branch.Value">@branch.Text</option>
                                    }
                                </InputSelect>
                            </div>
                            <!-- Department Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Department:</label>
                                <InputSelect @bind-Value="workerModel.Department" class="k-dropdown">
                                    <option value="">Select Department</option>
                                    @foreach (var dept in Departments)
                                    {
                                        <option value="@dept.Value">@dept.Text</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Job Title Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Job Title:</label>
                                <InputSelect @bind-Value="workerModel.JobTitle" class="k-dropdown">
                                    <option value="">Select Job Title</option>
                                    @foreach (var title in JobTitles)
                                    {
                                        <option value="@title.Value">@title.Text</option>
                                    }
                                </InputSelect>
                            </div>
                            <!-- Worker Group Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Worker Group:</label>
                                <InputSelect @bind-Value="workerModel.WorkerGroup" class="k-dropdown">
                                    <option value="">Select Worker Group</option>
                                    @foreach (var group in WorkerGroups)
                                    {
                                        <option value="@group.Value">@group.Text</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- Signature Title Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Signature Title:</label>
                                <InputText @bind-Value="workerModel.SignatureTitle" class="k-textbox" maxlength="100" />
                            </div>
                        </div>
                    </div>

                    <!-- Emergency Contact Section -->
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Emergency Contact</h3>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Full Name Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Full Name:</label>
                                <InputText @bind-Value="workerModel.EmergencyContact.FullName" class="k-textbox" maxlength="100" />
                            </div>
                            <!-- Relationship Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Relationship:</label>
                                <InputSelect @bind-Value="workerModel.EmergencyContact.Relationship" class="k-dropdown">
                                    <option value="">Select Relationship</option>
                                    <option value="Spouse">Spouse</option>
                                    <option value="Parent">Parent</option>
                                    <option value="Child">Child</option>
                                    <option value="Sibling">Sibling</option>
                                    <option value="Friend">Friend</option>
                                    <option value="Other Relative">Other Relative</option>
                                    <option value="Other">Other</option>
                                </InputSelect>
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Home Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Home Phone:</label>
                                <InputText @bind-Value="workerModel.EmergencyContact.HomePhone" class="k-textbox" maxlength="15" />
                            </div>
                            <!-- Work Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Work Phone:</label>
                                <InputText @bind-Value="workerModel.EmergencyContact.WorkPhone" class="k-textbox" maxlength="15" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- Cell Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Cell Phone:</label>
                                <InputText @bind-Value="workerModel.EmergencyContact.CellPhone" class="k-textbox" maxlength="15" />
                            </div>
                            <!-- Email Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Email:</label>
                                <InputText @bind-Value="workerModel.EmergencyContact.Email" class="k-textbox" maxlength="100" type="email" />
                            </div>
                        </div>
                    </div>

                    <!-- Additional Information Section -->
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Additional Information</h3>

                        <div class="hchb-form-row hchb-form-row-2">
                            <!-- User Field 1 -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">User Field 1:</label>
                                <InputText @bind-Value="workerModel.UserField1" class="k-textbox" maxlength="100" />
                            </div>
                            <!-- User Field 2 -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">User Field 2:</label>
                                <InputText @bind-Value="workerModel.UserField2" class="k-textbox" maxlength="100" />
                            </div>
                        </div>

                        <div class="hchb-form-row">
                            <!-- Comments Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Comments:</label>
                                <InputTextArea @bind-Value="workerModel.Comments" class="k-textarea" rows="4" maxlength="500" />
                            </div>
                        </div>

                        <div class="hchb-form-row hchb-form-row-3">
                            <!-- Referred By Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Referred By:</label>
                                <InputText @bind-Value="workerModel.ReferredBy" class="k-textbox" maxlength="100" />
                            </div>
                            <!-- Referral Category Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Referral Category:</label>
                                <InputSelect @bind-Value="workerModel.ReferralCategory" class="k-dropdown">
                                    <option value="">Select Category</option>
                                    @foreach (var category in ReferralCategories)
                                    {
                                        <option value="@category.Value">@category.Text</option>
                                    }
                                </InputSelect>
                            </div>
                            <!-- Referral Contact Phone Field -->
                            <div class="k-form-field-wrap">
                                <label class="k-label k-form-label">Referral Contact Phone:</label>
                                <InputText @bind-Value="workerModel.ReferralContactPhone" class="k-textbox" maxlength="15" />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Organization Assignments Tab -->
                <div class="k-content @(activeTab == "organization" ? "k-active" : "")" id="organization">
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Service Lines</h3>
                        <div class="hchb-form-row" style="margin-bottom: 20px;">
                            <div style="display: flex; gap: 10px;">
                                <button type="button" class="c-button c-button-primary c-button-small" @onclick="AddServiceLine">
                                    <span class="c-button-child-content">Add Service Line</span>
                                </button>
                                <button type="button" class="c-button c-button-warning c-button-small" @onclick="SetDefaultServiceLine">
                                    <span class="c-button-child-content">Set as Default</span>
                                </button>
                                <button type="button" class="c-button c-button-danger c-button-small" @onclick="InactivateServiceLine">
                                    <span class="c-button-child-content">Inactivate</span>
                                </button>
                            </div>
                        </div>
                        <div class="k-grid">
                            <table class="c-customtable">
                                <thead>
                                    <tr class="c-customtable-headers">
                                        <th style="width: 40%">Service Line</th>
                                        <th style="width: 20%">Status</th>
                                        <th style="width: 20%">Default</th>
                                        <th style="width: 20%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (ServiceLines?.Any() == true)
                                    {
                                        @foreach (var serviceLine in ServiceLines)
                                        {
                                            <tr>
                                                <td>@serviceLine.Name</td>
                                                <td>@serviceLine.Status</td>
                                                <td>@(serviceLine.IsDefault ? "Yes" : "No")</td>
                                                <td>
                                                    <button type="button" class="c-button c-button-secondary c-button-small">Edit</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="4" style="text-align: center; color: #6c757d; padding: 20px;">No service lines assigned</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Branches/Locations</h3>
                        <div class="hchb-form-row" style="margin-bottom: 20px;">
                            <div style="display: flex; gap: 10px;">
                                <button type="button" class="c-button c-button-primary c-button-small" @onclick="AddLocation">
                                    <span class="c-button-child-content">Add Location</span>
                                </button>
                                <button type="button" class="c-button c-button-danger c-button-small" @onclick="InactivateLocation">
                                    <span class="c-button-child-content">Inactivate</span>
                                </button>
                            </div>
                        </div>
                        <div class="k-grid">
                            <table class="c-customtable">
                                <thead>
                                    <tr class="c-customtable-headers">
                                        <th style="width: 50%">Location</th>
                                        <th style="width: 25%">Status</th>
                                        <th style="width: 25%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (WorkerLocations?.Any() == true)
                                    {
                                        @foreach (var location in WorkerLocations)
                                        {
                                            <tr>
                                                <td>@location.Name</td>
                                                <td>@location.Status</td>
                                                <td>
                                                    <button type="button" class="c-button c-button-secondary c-button-small">Edit</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3" style="text-align: center; color: #6c757d; padding: 20px;">No locations assigned</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Qualifications Tab -->
                <div class="k-content @(activeTab == "qualifications" ? "k-active" : "")" id="qualifications">
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Worker Qualifications</h3>
                        <div class="hchb-form-row" style="margin-bottom: 20px;">
                            <div style="display: flex; gap: 10px;">
                                <button type="button" class="c-button c-button-primary c-button-small" @onclick="AddQualification">
                                    <span class="c-button-child-content">Add Qualification</span>
                                </button>
                                <button type="button" class="c-button c-button-warning c-button-small" @onclick="EditQualification">
                                    <span class="c-button-child-content">Edit</span>
                                </button>
                                <button type="button" class="c-button c-button-danger c-button-small" @onclick="DeleteQualification">
                                    <span class="c-button-child-content">Delete</span>
                                </button>
                            </div>
                        </div>
                        <div class="k-grid">
                            <table class="c-customtable">
                                <thead>
                                    <tr class="c-customtable-headers">
                                        <th style="width: 25%">Qualification Type</th>
                                        <th style="width: 20%">Date Obtained</th>
                                        <th style="width: 20%">Expiration Date</th>
                                        <th style="width: 15%">Status</th>
                                        <th style="width: 20%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Qualifications?.Any() == true)
                                    {
                                        @foreach (var qualification in Qualifications)
                                        {
                                            <tr>
                                                <td>@qualification.Name</td>
                                                <td>@qualification.DateObtained?.ToString("MM/dd/yyyy")</td>
                                                <td>@qualification.ExpirationDate?.ToString("MM/dd/yyyy")</td>
                                                <td>@qualification.Status</td>
                                                <td>
                                                    <button type="button" class="c-button c-button-secondary c-button-small">Edit</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="5" style="text-align: center; color: #6c757d; padding: 20px;">No qualifications added</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Availability Tab -->
                <div class="k-content @(activeTab == "availability" ? "k-active" : "")" id="availability">
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Worker Availability</h3>
                        <p style="color: #6c757d; margin-bottom: 20px;">Configure when this worker is available for assignments.</p>
                        <div style="background: #e7f3ff; border: 1px solid #b3d9ff; border-radius: 8px; padding: 20px;">
                            <div style="display: flex; align-items: center; gap: 10px;">
                                <span style="color: #0066cc; font-weight: 600;">ℹ️ Availability configuration will be implemented in a future version.</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Clients Tab -->
                <div class="k-content @(activeTab == "clients" ? "k-active" : "")" id="clients">
                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Oriented Clients</h3>
                        <div class="hchb-form-row" style="margin-bottom: 20px;">
                            <div style="display: flex; gap: 10px;">
                                <button type="button" class="c-button c-button-primary c-button-small" @onclick="AddOrientedClient">
                                    <span class="c-button-child-content">Add Oriented Client</span>
                                </button>
                            </div>
                        </div>
                        <div class="k-grid">
                            <table class="c-customtable">
                                <thead>
                                    <tr class="c-customtable-headers">
                                        <th style="width: 50%">Client Name</th>
                                        <th style="width: 30%">Date Oriented</th>
                                        <th style="width: 20%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (OrientedClients?.Any() == true)
                                    {
                                        @foreach (var client in OrientedClients)
                                        {
                                            <tr>
                                                <td>@client.Name</td>
                                                <td>@client.DateOriented?.ToString("MM/dd/yyyy")</td>
                                                <td>
                                                    <button type="button" class="c-button c-button-danger c-button-small">Remove</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3" style="text-align: center; color: #6c757d; padding: 20px;">No oriented clients</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="hchb-card-section">
                        <h3 class="hchb-section-header">Incompatible Clients</h3>
                        <div class="hchb-form-row" style="margin-bottom: 20px;">
                            <div style="display: flex; gap: 10px;">
                                <button type="button" class="c-button c-button-primary c-button-small" @onclick="AddIncompatibleClient">
                                    <span class="c-button-child-content">Add Incompatible Client</span>
                                </button>
                            </div>
                        </div>
                        <div class="k-grid">
                            <table class="c-customtable">
                                <thead>
                                    <tr class="c-customtable-headers">
                                        <th style="width: 40%">Client Name</th>
                                        <th style="width: 40%">Reason</th>
                                        <th style="width: 20%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (IncompatibleClients?.Any() == true)
                                    {
                                        @foreach (var client in IncompatibleClients)
                                        {
                                            <tr>
                                                <td>@client.Name</td>
                                                <td>@client.Reason</td>
                                                <td>
                                                    <button type="button" class="c-button c-button-danger c-button-small">Remove</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3" style="text-align: center; color: #6c757d; padding: 20px;">No incompatible clients</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Modern HCHB Form Actions -->
    <div class="hchb-actions-container">
        <div style="display: flex; gap: 15px;">
            <button type="submit" class="c-button c-button-primary" style="padding: 12px 24px;" @onclick="HandleValidSubmit" disabled="@isLoading">
                <span class="c-button-child-content">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span style="margin-left: 8px;">Saving...</span>
                    }
                    else
                    {
                        <span>💾 Save Worker</span>
                    }
                </span>
            </button>
            <button type="button" class="c-button c-button-secondary" style="padding: 12px 24px;" @onclick="CancelForm" disabled="@isLoading">
                <span class="c-button-child-content">❌ Cancel</span>
            </button>
        </div>
        <div>
            <button type="button" class="c-button c-button-info" style="padding: 12px 24px;" @onclick="UpdateStatus" disabled="@isLoading">
                <span class="c-button-child-content">⚙️ Update Status</span>
            </button>
        </div>
    </div>
</div>

<style>
    :root {
        --hchb-primary: #0066cc;
        --hchb-secondary: #6c757d;
        --hchb-success: #28a745;
        --hchb-danger: #dc3545;
        --hchb-warning: #ffc107;
        --hchb-info: #17a2b8;
        --hchb-light: #f8f9fa;
        --hchb-dark: #343a40;
        --hchb-surface: #f8f9fa;
        --hchb-border: #e9ecef;
        --hchb-text: #495057;
        --hchb-text-secondary: #6c757d;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f5f5f5;
    }

    .hchb-page-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    .hchb-page-header {
        background: linear-gradient(135deg, var(--hchb-primary) 0%, #004999 100%);
        color: white;
        padding: 30px;
        border-radius: 12px;
        margin-bottom: 30px;
        box-shadow: 0 4px 20px rgba(0, 102, 204, 0.15);
    }

    .hchb-page-title {
        font-size: 2.5rem;
        font-weight: 300;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .hchb-card-section {
        background: white;
        border-radius: 12px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

    .hchb-section-header {
        font-size: 1.3rem;
        font-weight: 600;
        color: var(--hchb-primary);
        margin: 0 0 20px 0;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
    }

    .hchb-form-row {
        display: grid;
        gap: 20px;
        margin-bottom: 25px;
    }

    .hchb-form-row-2 {
        grid-template-columns: 1fr 1fr;
    }

    .hchb-form-row-3 {
        grid-template-columns: 1fr 2fr 1fr;
    }

    .hchb-form-row-4 {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }

    .c-tabs {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    }

    .c-button {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        border: none !important;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
        text-align: center;
        justify-content: center;
        min-width: 120px;
        padding: 12px 24px;
        cursor: pointer;
    }

    .c-button-primary {
        background: linear-gradient(135deg, var(--hchb-primary) 0%, #004999 100%);
        color: white;
    }

    .c-button-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.3);
    }

    .c-button-secondary {
        background: var(--hchb-secondary);
        color: white;
    }

    .c-button-danger {
        background: var(--hchb-danger);
        color: white;
    }

    .c-button-warning {
        background: var(--hchb-warning);
        color: #212529;
    }

    .c-button-info {
        background: var(--hchb-info);
        color: white;
    }

    .c-button-small {
        padding: 8px 16px;
        font-size: 0.875rem;
    }

    .hchb-actions-container {
        background: white;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 30px;
    }

    .k-form-field-wrap {
        margin-bottom: 15px;
    }

    /* Enhanced Tab Styling */
    .k-tabstrip {
        border: none;
        background: transparent;
    }

    .k-tabstrip-items {
        background: var(--hchb-surface);
        padding: 0 20px;
        margin: 0;
        border-bottom: 2px solid var(--hchb-border);
        display: flex;
        flex-wrap: wrap;
    }

    .k-tabstrip-items .k-item {
        border: none;
        background: transparent;
        margin: 0 5px;
        border-radius: 12px 12px 0 0;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .k-tabstrip-items .k-item.k-active {
        background: white;
        color: var(--hchb-primary);
        border-bottom: 3px solid var(--hchb-primary);
        transform: translateY(-2px);
    }

    .k-tabstrip-items .k-link {
        padding: 16px 24px;
        color: var(--hchb-text-secondary);
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s ease;
        display: block;
    }

    .k-tabstrip-items .k-active .k-link {
        color: var(--hchb-primary);
    }

    /* Tab Content Areas */
    .k-content {
        display: none;
        padding: 30px;
        background: white;
        border: none;
    }

    .k-content.k-active {
        display: block;
    }

    /* Modern Form Fields */
    .k-form-label {
        font-weight: 600;
        color: var(--hchb-text);
        font-size: 0.9rem;
        margin-bottom: 4px;
        display: block;
    }

    .k-textbox,
    .k-dropdown,
    .k-datepicker,
    .k-textarea {
        border: 2px solid var(--hchb-border);
        border-radius: 8px;
        padding: 12px 16px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: white;
        width: 100%;
        box-sizing: border-box;
    }

    .k-textbox:focus,
    .k-dropdown:focus,
    .k-datepicker:focus,
    .k-textarea:focus {
        border-color: var(--hchb-primary);
        box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.1);
        outline: none;
    }

    .k-form-hint {
        font-size: 0.85rem;
        color: var(--hchb-text-secondary);
        margin-top: 4px;
    }

    /* Enhanced Tables */
    .c-customtable {
        width: 100%;
        border-collapse: collapse;
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        margin: 20px 0;
    }

    .c-customtable th {
        background: var(--hchb-surface);
        color: var(--hchb-text);
        padding: 16px;
        text-align: left;
        font-weight: 600;
        border-bottom: 2px solid var(--hchb-border);
    }

    .c-customtable td {
        padding: 14px 16px;
        border-bottom: 1px solid #e9ecef;
    }

    .c-customtable tbody tr:hover {
        background: #f8f9fa;
    }

    /* Validation States */
    .invalid .k-textbox,
    .invalid .k-dropdown,
    .invalid .k-datepicker,
    .invalid .k-textarea {
        border-color: var(--hchb-danger) !important;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25) !important;
    }

    .validation-message {
        color: var(--hchb-danger);
        font-size: 0.85rem;
        margin-top: 4px;
    }

    /* Loading States */
    .loading {
        opacity: 0.6;
        pointer-events: none;
        position: relative;
    }

    .loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 24px;
        height: 24px;
        margin: -12px 0 0 -12px;
        border: 2px solid var(--hchb-border);
        border-top: 2px solid var(--hchb-primary);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    @@keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }

    @@media (max-width: 768px) {
        .hchb-form-row-2,
        .hchb-form-row-3,
        .hchb-form-row-4 {
            grid-template-columns: 1fr;
        }
        
        .hchb-actions-container {
            flex-direction: column;
            gap: 15px;
        }

        .k-tabstrip-items .k-link {
            padding: 12px 16px;
            font-size: 0.9rem;
        }

        .k-tabstrip-items {
            padding: 0 10px;
        }
    }

    /* Loading Spinner Styles */
    .spinner-border {
        display: inline-block;
        width: 1rem;
        height: 1rem;
        vertical-align: -0.125em;
        border: 0.125em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    .spinner-border-sm {
        width: 0.875rem;
        height: 0.875rem;
        border-width: 0.125em;
    }

    @@keyframes spinner-border {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Disabled button styling */
    .c-button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
</style>

@code {
    private string activeTab = "demographics";
    private WorkerModel workerModel = new();
    private bool isLoading = false;

    // Dropdown data collections
    private List<SelectListItem> States = new();
    private List<SelectListItem> Branches = new();
    private List<SelectListItem> Departments = new();
    private List<SelectListItem> JobTitles = new();
    private List<SelectListItem> WorkerGroups = new();
    private List<SelectListItem> ReferralCategories = new();

    // Data collections for tabs
    private List<ServiceLine> ServiceLines = new();
    private List<WorkerLocation> WorkerLocations = new();
    private List<Qualification> Qualifications = new();
    private List<OrientedClient> OrientedClients = new();
    private List<IncompatibleClient> IncompatibleClients = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDropdownData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeFormInterop");
        }
    }

    private void SetActiveTab(string tabName)
    {
        activeTab = tabName;
    }

    private Task LoadDropdownData()
    {
        // Load States
        States = new List<SelectListItem>
        {
            new() { Value = "AL", Text = "Alabama" },
            new() { Value = "AK", Text = "Alaska" },
            new() { Value = "AZ", Text = "Arizona" },
            // Add more states as needed...
        };

        // Load other dropdown data
        Branches = new List<SelectListItem>
        {
            new() { Value = "1", Text = "Main Branch" },
            new() { Value = "2", Text = "North Branch" },
            // Add more branches...
        };

        Departments = new List<SelectListItem>
        {
            new() { Value = "1", Text = "Nursing" },
            new() { Value = "2", Text = "Administration" },
            // Add more departments...
        };

        JobTitles = new List<SelectListItem>
        {
            new() { Value = "1", Text = "Nurse" },
            new() { Value = "2", Text = "Administrator" },
            // Add more job titles...
        };

        WorkerGroups = new List<SelectListItem>
        {
            new() { Value = "1", Text = "Full Time" },
            new() { Value = "2", Text = "Part Time" },
            // Add more worker groups...
        };

        ReferralCategories = new List<SelectListItem>
        {
            new() { Value = "1", Text = "Employee Referral" },
            new() { Value = "2", Text = "Advertisement" },
            // Add more categories...
        };

        return Task.CompletedTask;
    }

    private async Task HandleValidSubmit()
    {
        isLoading = true;
        StateHasChanged(); // Update UI to show loading state
        
        try
        {
            // Simulate API call
            await Task.Delay(1000);
            
            await JSRuntime.InvokeVoidAsync("showNotification", "✅ Worker saved successfully!", "success");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showNotification", $"❌ Error saving worker: {ex.Message}", "error");
        }
        finally
        {
            isLoading = false;
            StateHasChanged(); // Update UI to hide loading state
        }
    }

    private async Task CancelForm()
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to cancel? Any unsaved changes will be lost.");
        if (confirmed)
        {
            workerModel = new WorkerModel();
            await JSRuntime.InvokeVoidAsync("showNotification", "📝 Form cancelled", "info");
        }
    }

    private async Task UpdateStatus()
    {
        await JSRuntime.InvokeVoidAsync("showNotification", "⚙️ Status update functionality would be implemented here", "info");
    }

    // Organization tab methods
    private void AddServiceLine() => JSRuntime.InvokeVoidAsync("showNotification", "Add Service Line functionality would be implemented here", "info");
    private void SetDefaultServiceLine() => JSRuntime.InvokeVoidAsync("showNotification", "Set Default Service Line functionality would be implemented here", "info");
    private void InactivateServiceLine() => JSRuntime.InvokeVoidAsync("showNotification", "Inactivate Service Line functionality would be implemented here", "info");
    private void AddLocation() => JSRuntime.InvokeVoidAsync("showNotification", "Add Location functionality would be implemented here", "info");
    private void InactivateLocation() => JSRuntime.InvokeVoidAsync("showNotification", "Inactivate Location functionality would be implemented here", "info");

    // Qualifications tab methods
    private void AddQualification() => JSRuntime.InvokeVoidAsync("showNotification", "Add Qualification functionality would be implemented here", "info");
    private void EditQualification() => JSRuntime.InvokeVoidAsync("showNotification", "Edit Qualification functionality would be implemented here", "info");
    private void DeleteQualification() => JSRuntime.InvokeVoidAsync("showNotification", "Delete Qualification functionality would be implemented here", "info");

    // Clients tab methods
    private void AddOrientedClient() => JSRuntime.InvokeVoidAsync("showNotification", "Add Oriented Client functionality would be implemented here", "info");
    private void AddIncompatibleClient() => JSRuntime.InvokeVoidAsync("showNotification", "Add Incompatible Client functionality would be implemented here", "info");

    // Data models
    public class WorkerModel
    {
        [Required]
        public string FirstName { get; set; } = string.Empty;
        [Required]
        public string LastName { get; set; } = string.Empty;
        public string MiddleInitial { get; set; } = string.Empty;
        public string NickName { get; set; } = string.Empty;
        public DateTime? BirthDate { get; set; }
        public string Gender { get; set; } = string.Empty;
        public string Race { get; set; } = string.Empty;
        public string MaritalStatus { get; set; } = string.Empty;
        public string NPI { get; set; } = string.Empty;
        public string Street { get; set; } = string.Empty;
        public string City { get; set; } = string.Empty;
        public string State { get; set; } = string.Empty;
        public string ZipCode { get; set; } = string.Empty;
        public string HomePhone { get; set; } = string.Empty;
        public string WorkPhone { get; set; } = string.Empty;
        public string CellPhone { get; set; } = string.Empty;
        public string Pager { get; set; } = string.Empty;
        public string EmailAddress { get; set; } = string.Empty;
        public string PublicUserName { get; set; } = string.Empty;
        public string FederatedUserPrincipalName { get; set; } = string.Empty;
        public string HomeBranch { get; set; } = string.Empty;
        public string Department { get; set; } = string.Empty;
        public string JobTitle { get; set; } = string.Empty;
        public string WorkerGroup { get; set; } = string.Empty;
        public string SignatureTitle { get; set; } = string.Empty;
        public string UserField1 { get; set; } = string.Empty;
        public string UserField2 { get; set; } = string.Empty;
        public string Comments { get; set; } = string.Empty;
        public string ReferredBy { get; set; } = string.Empty;
        public string ReferralCategory { get; set; } = string.Empty;
        public string ReferralContactPhone { get; set; } = string.Empty;
        public string Status { get; set; } = string.Empty;
        public string WorkerId { get; set; } = string.Empty;
        public EmergencyContactModel EmergencyContact { get; set; } = new();
    }

    public class EmergencyContactModel
    {
        public string FullName { get; set; } = string.Empty;
        public string Relationship { get; set; } = string.Empty;
        public string HomePhone { get; set; } = string.Empty;
        public string WorkPhone { get; set; } = string.Empty;
        public string CellPhone { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
    }

    public class SelectListItem
    {
        public string Value { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
    }

    public class ServiceLine
    {
        public string Name { get; set; } = string.Empty;
        public string Status { get; set; } = string.Empty;
        public bool IsDefault { get; set; }
    }

    public class WorkerLocation
    {
        public string Name { get; set; } = string.Empty;
        public string Status { get; set; } = string.Empty;
    }

    public class Qualification
    {
        public string Name { get; set; } = string.Empty;
        public DateTime? DateObtained { get; set; }
        public DateTime? ExpirationDate { get; set; }
        public string Status { get; set; } = string.Empty;
    }

    public class OrientedClient
    {
        public string Name { get; set; } = string.Empty;
        public DateTime? DateOriented { get; set; }
    }

    public class IncompatibleClient
    {
        public string Name { get; set; } = string.Empty;
        public string Reason { get; set; } = string.Empty;
    }
}
